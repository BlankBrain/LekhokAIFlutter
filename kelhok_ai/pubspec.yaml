name: karigorai_mobile
description: "KarigorAI mobile application for AI-powered story generation"
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.5.4
  flutter: ">=3.24.5"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # State Management
  flutter_riverpod: ^2.4.9
  riverpod_annotation: ^2.3.3
  
  # HTTP Client
  dio: ^5.3.4
  
  # Secure Storage
  flutter_secure_storage: ^9.2.2
  
  # Navigation
  go_router: ^12.1.3
  
  # UI Components
  cupertino_icons: ^1.0.8
  google_fonts: ^6.1.0
  
  # Utilities
  intl: ^0.18.1
  equatable: ^2.0.5
  freezed_annotation: ^2.4.1
  json_annotation: ^4.8.1
  
  # Phase 1 Dependencies - Enhanced Story Generation
  image_picker: ^1.0.4             # Camera/gallery access for caption generation
  cached_network_image: ^3.3.0     # Optimized image loading and caching
  lottie: ^2.7.0                   # Advanced animations for loading states
  share_plus: ^7.2.1               # Native sharing functionality
  path_provider: ^2.1.1            # File system access
  photo_view: ^0.14.0              # Image zoom/pan functionality
  image_gallery_saver: ^2.0.3      # Save images to gallery
  pull_to_refresh: ^2.0.0          # Pull to refresh functionality
  flutter_staggered_animations: ^1.1.1  # List animations

  # Phase 4 Dependencies - Premium Features & Analytics
  fl_chart: ^0.66.2                # Beautiful charts for analytics dashboard
  hive: ^2.2.3                     # Local database for analytics storage
  hive_flutter: ^1.1.0             # Hive Flutter adapter
  device_info_plus: ^9.1.1         # Device information for analytics
  package_info_plus: ^4.2.0        # App version info
  connectivity_plus: ^5.0.2        # Network connectivity status

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^4.0.0
  
  # Code Generation
  build_runner: ^2.4.13
  riverpod_generator: ^2.3.9
  mockito: ^5.4.4
  freezed: ^2.4.6
  json_serializable: ^6.7.1

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/icons/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
